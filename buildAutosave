#!/bin/bash -e

AS_SOURCE="$1"
PROJECT_BINARY_DIR="`pwd`"
EPICS_BASE="${PROJECT_BINARY_DIR}/epics-base"

# Determine architecture of the build
EPICS_ARCH=`grep "^ARCH=" "${EPICS_BASE}/lib/pkgconfig/epics-base.pc" | sed -e 's/^ARCH=//'`

# Function links file, generating subfolder if necessary
makeLink() {
   mkdir -p `dirname "${PROJECT_BINARY_DIR}/autosave/$1"`
   ln -sfn "${AS_SOURCE}/$1" "${PROJECT_BINARY_DIR}/autosave/$1"
}

export -f makeLink
export PROJECT_BINARY_DIR
export AS_SOURCE

# "find" generates a list of paths to any regular file below the source directory
# and calls the makeLink function for every entry.
# NOTE:Semikolon needs to be escaped
if [ ! -f "${PROJECT_BINARY_DIR}/AutosaveSourceLinked" ]; then
  cd "${AS_SOURCE}/"
  echo "Symlinking autosave source..."
  find -type f -exec bash -c "makeLink {}" \;
  touch "${PROJECT_BINARY_DIR}/AutosaveSourceLinked"
fi

# Replacing the Symlink of the top level RELEASE file with a modified copy
rm "${PROJECT_BINARY_DIR}/autosave/configure/RELEASE"
sed -e 's:EPICS_BASE=.\+:EPICS_BASE='${EPICS_BASE}':' "${AS_SOURCE}/configure/RELEASE" > "${PROJECT_BINARY_DIR}/autosave/configure/RELEASE"

# Build library
echo "Build autosave library..."
cd "${PROJECT_BINARY_DIR}/autosave"
make -j5 USR_CFLAGS=-w USR_CXXFLAGS=-w

# Copy library to project/lib folder
mkdir -p "${PROJECT_BINARY_DIR}/lib"
cp "${PROJECT_BINARY_DIR}/autosave/lib/${EPICS_ARCH}/"*.a "${PROJECT_BINARY_DIR}/lib"
chmod u+w -R "${PROJECT_BINARY_DIR}/lib"
